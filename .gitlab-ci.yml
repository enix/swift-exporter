stages:
  - build
  - release

variables:
  GITHUB_REPO: enix/$CI_PROJECT_NAME
  PLATFORMS: linux/amd64,linux/arm64
  CACHE_TAG: $CI_REGISTRY_IMAGE:cache
  IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  PUBLIC_IMAGE_TAG_LATEST: docker.io/$DOCKER_HUB_REPOSITORY/$CI_PROJECT_NAME:latest

.only-master:
  only:
    - main
  except:
    - tags

.only-semver:
  only:
    refs:
      - /^v([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?$/

.init-docker-buildx:
  variables:
    DOCKER_CLI_EXPERIMENTAL: enabled
  services:
    - docker:20-dind
  before_script:
    - mkdir -p ~/.docker/cli-plugins
    - wget -O ~/.docker/cli-plugins/docker-buildx "https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64"
    - chmod +x ~/.docker/cli-plugins/docker-buildx
    - docker context create $CI_PIPELINE_ID
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create $CI_PIPELINE_ID --name builder --use
    - docker buildx inspect builder
    - echo -n "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"


build:
  extends:
    - .init-docker-buildx
    - .only-master
  stage: build
  image: docker:stable-dind
  script:
    - export IMAGE_TAG="$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
    - docker buildx build --platform "$PLATFORMS" -t "$IMAGE_TAG" --build-arg "VERSION=devel ($CI_COMMIT_SHORT_SHA)" --cache-from $CACHE_TAG --cache-to $CACHE_TAG --push .

build-latest:
  extends:
    - .init-docker-buildx
    - .only-semver
  stage: build
  image: docker:stable-dind
  script:
    - export IMAGE_TAG="$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME:1}"
    - docker buildx build --platform "$PLATFORMS" -t "$IMAGE_TAG" -t "$IMAGE_TAG_LATEST" --build-arg "VERSION=${CI_COMMIT_REF_SLUG:1}" --cache-from $CACHE_TAG --cache-to $CACHE_TAG --push .

semantic-release:
  extends:
    - .only-master
  stage: release
  image: enix/semantic-release:gitlab
  when: manual
  script:
    - "echo \"{\\\"repository\\\": \\\"https://github.com/${GITHUB_REPO}\\\"}\" > package.json"
    - semantic-release --ci

docker-hub:
  extends:
    - .only-semver
  stage: release
  image:
    name: ananace/skopeo:latest
    entrypoint: [""]
  script:
    - export IMAGE_TAG="$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME:1}"
    - export PUBLIC_IMAGE_TAG="docker.io/$DOCKER_HUB_REPOSITORY/$CI_PROJECT_NAME:${CI_COMMIT_REF_NAME:1}"
    - skopeo --insecure-policy copy --all --src-creds "$CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD" --dest-creds "$DOCKER_HUB_USER:$DOCKER_HUB_PASSWORD" "docker://${IMAGE_TAG}" "docker://${PUBLIC_IMAGE_TAG}"
    - skopeo --insecure-policy copy --all --src-creds "$CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD" --dest-creds "$DOCKER_HUB_USER:$DOCKER_HUB_PASSWORD" "docker://${IMAGE_TAG_LATEST}" "docker://${PUBLIC_IMAGE_TAG_LATEST}"